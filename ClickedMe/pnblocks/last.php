<?php

/**
 * initialise block
 * 
 * @author       The PostNuke Development Team
 */
function ClickedMe_lastblock_init()
{
    // nothing...
}

/**
 * get information on block
 * 
 * @author       The PostNuke Development Team
 * @return       array       The block information
 */
function ClickedMe_lastblock_info()
{
    return array('text_type'      => 'Last',
                 'module'         => 'ClickedMe',
                 'text_type_long' => 'Show usernames that clicked my profile (chronilogical)',
                 'allow_multiple' => true,
                 'form_content'   => false,
                 'form_refresh'   => false,
                 'show_preview'   => true);
}

/**
 * display block
 * 
 * @return       output      the rendered bock
 */
function ClickedMe_lastblock_display($blockinfo)
{

    // Security check
    if (!SecurityUtil::checkPermission('ClickedMe:last:',"::", ACCESS_READ) || !pnUserLoggedIn()) return;

    // Get variables from content block
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['numitems'])) {
        $vars['numitems'] = 15;
    }

    // Check if the ClickedMe module is available. 
    if (!pnModAvailable('ClickedMe')) {
	return false;
    }

    // Create output object
    $pnRender =& new pnRender('ClickedMe');
	
    // Assign the items
    $pnRender->assign('items', pnModAPIFunc('ClickedMe','user','getViewers',array('uid'=>pnUserGetVar('uid'),'amount'=>$vars['numitems'])));
	
    // Populate block info and pass to theme
    $blockinfo['content'] = $pnRender->fetch('clickedme_block_last.htm');

    return themesideblock($blockinfo);
}



/**
 * modify block settings
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the bock form
 */
function ClickedMe_lastblock_modify($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['numitems'])) {
        $vars['numitems'] = 5;
    }

    // Create output object
	$pnRender =& new pnRender('ClickedMe');

	// As Admin output changes often, we do not want caching.
	$pnRender->caching = false;

    // assign the approriate values
	$pnRender->assign('numitems', $vars['numitems']);

    // Return the output that has been generated by this function
	return $pnRender->fetch('clickedme_block_last_modify.htm');
}

/**
 * update block settings
 * @param        array       $blockinfo     a blockinfo structure
 * @return       $blockinfo  the modified blockinfo structure
 */
function ClickedMe_lastblock_update($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);
	
    // alter the corresponding variable
    $vars['numitems'] = pnVarCleanFromInput('numitems');
	
    // write back the new contents
    $blockinfo['content'] = pnBlockVarsToContent($vars);

    // clear the block cache
    $pnRender =& new pnRender('ClickedMe');
    $pnRender->clear_cache('clickedme_block_last.htm');
	
    return $blockinfo;
}
?>